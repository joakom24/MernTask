{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\taskReact\\\\client\\\\src\\\\components\\\\tasks\\\\FormTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormTask = () => {\n  _s();\n\n  //Si proyecto esta activo\n  const projectsContext = useContext(projectContext);\n  const {\n    project\n  } = projectsContext; //obtener task context \n\n  const tasksContext = useContext(taskContext);\n  const {\n    taskselection,\n    errortask,\n    addTask,\n    validateTask,\n    getTasks,\n    actualizateTask,\n    cleanTask\n  } = tasksContext; //effect que detecta tarea seleccionada \n\n  useEffect(() => {\n    if (taskselection !== null) {\n      saveTask(taskselection);\n    } else {\n      saveTask({\n        name: ''\n      });\n    }\n  }, [taskselection]); //state form \n\n  const [task, saveTask] = useState({\n    name: ''\n  }); //extraer el nombre del proyecto\n\n  const {\n    name\n  } = task; //Sin proyectos \n\n  if (!project) return null; //Array destructuring \n\n  const [projectNow] = project; //Leer valores del form\n\n  const handleChange = e => {\n    saveTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar\n\n    if (name.trim() === '') {\n      validateTask();\n      return;\n    } //Si es edicion o nueva tarea\n\n\n    if (taskselection === null) {\n      //tarea nueva\n      task.projectId = projectNow.id;\n      task.state = false;\n      addTask(task);\n    } else {\n      //actualizar tarea\n      actualizateTask(task); //Elimina tareaseleccionada del state\n\n      cleanTask();\n    } //Obtener y filtrar tareas\n\n\n    getTasks(projectNow.id); //reiniciar form\n\n    saveTask({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleChange,\n          placeholder: \"Name task\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: taskselection ? 'Editar tarea' : 'Agregar tarea'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), errortask ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El nombre de la tarea es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormTask, \"ElfSZ3UGJQNXIxZDVUQ+9hFFYvc=\");\n\n_c = FormTask;\nexport default FormTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTask\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/taskReact/client/src/components/tasks/FormTask.js"],"names":["React","useContext","useEffect","useState","projectContext","taskContext","FormTask","projectsContext","project","tasksContext","taskselection","errortask","addTask","validateTask","getTasks","actualizateTask","cleanTask","saveTask","name","task","projectNow","handleChange","e","target","value","onSubmit","preventDefault","trim","projectId","id","state"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport projectContext from '../../context/projects/projectContext'\r\nimport taskContext from '../../context/tasks/TaskContext'\r\n\r\n\r\nconst FormTask = () => {\r\n     //Si proyecto esta activo\r\n     const projectsContext = useContext(projectContext)\r\n     const {project } = projectsContext\r\n\r\n     //obtener task context \r\n    const tasksContext = useContext(taskContext)\r\n    const {taskselection, errortask\r\n        , addTask, validateTask, getTasks, actualizateTask, cleanTask\r\n    } = tasksContext\r\n     \r\n    //effect que detecta tarea seleccionada \r\n    useEffect(() => {\r\n        if(taskselection !== null){\r\n            saveTask(taskselection)\r\n        }else {\r\n            saveTask({\r\n                name: ''\r\n            })\r\n        }\r\n    }, [taskselection])\r\n    //state form \r\n     const [task, saveTask] = useState({\r\n         name: '',\r\n     })\r\n\r\n     //extraer el nombre del proyecto\r\n     const { name } = task\r\n      //Sin proyectos \r\n    if(!project) return null\r\n\r\n    //Array destructuring \r\n    const  [projectNow] = project\r\n     //Leer valores del form\r\n     const handleChange = e => {\r\n         saveTask({\r\n             ...task,\r\n             [e.target.name]: e.target.value\r\n         })\r\n     }\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        //validar\r\n        if(name.trim() === ''){\r\n            validateTask()\r\n            return\r\n        }   \r\n        \r\n        //Si es edicion o nueva tarea\r\n        if(taskselection === null){\r\n            //tarea nueva\r\n            task.projectId = projectNow.id\r\n            task.state= false\r\n            addTask(task)\r\n        }else {\r\n            //actualizar tarea\r\n            actualizateTask(task)\r\n\r\n            //Elimina tareaseleccionada del state\r\n            cleanTask()\r\n        }\r\n\r\n\r\n        //Obtener y filtrar tareas\r\n        getTasks(projectNow.id)\r\n        //reiniciar form\r\n        saveTask({\r\n            name: ''\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <input type=\"text\"  value={name} onChange={handleChange} placeholder=\"Name task\" name=\"name\"/>\r\n                </div>\r\n                <div>\r\n                    <button>{taskselection ? 'Editar tarea' : 'Agregar tarea'}</button>\r\n                </div>\r\n            </form>\r\n            {errortask ? <p>El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTask\r\n"]},"metadata":{},"sourceType":"module"}