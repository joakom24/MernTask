{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\taskReact\\\\client\\\\src\\\\components\\\\tasks\\\\FormTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormTask = () => {\n  _s();\n\n  //Si proyecto esta activo\n  const projectsContext = useContext(projectContext);\n  const {\n    project\n  } = projectsContext; //obtener task context \n\n  const tasksContext = useContext(taskContext);\n  const {\n    taskselection,\n    errortask,\n    addTask,\n    validateTask,\n    getTasks\n  } = tasksContext; //state form \n\n  const [task, saveTask] = useState({\n    name: ''\n  }); //extraer el nombre del proyecto\n\n  const {\n    name\n  } = task; //Sin proyectos \n\n  if (!project) return null; //Array destructuring \n\n  const [projectNow] = project; //Leer valores del form\n\n  const handleChange = e => {\n    saveTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //validar\n\n    if (name.trim() === '') {\n      validateTask();\n      return;\n    } //agregar la tarea al state\n\n\n    task.projectId = projectNow.id;\n    task.state = false;\n    addTask(task); //Obtener y filtrar tareas\n\n    getTasks(projectNow.id); //reiniciar form\n\n    saveTask({\n      name: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleChange,\n          placeholder: \"Name task\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), errortask ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El nombre de la tarea es obligatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormTask, \"gSalv7V5nfm9/meNrkKIko9dOQc=\");\n\n_c = FormTask;\nexport default FormTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTask\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/taskReact/client/src/components/tasks/FormTask.js"],"names":["React","useContext","useState","projectContext","taskContext","FormTask","projectsContext","project","tasksContext","taskselection","errortask","addTask","validateTask","getTasks","task","saveTask","name","projectNow","handleChange","e","target","value","onSubmit","preventDefault","trim","projectId","id","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAClB;AACA,QAAMC,eAAe,GAAGL,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaD,eAAnB,CAHkB,CAIlB;;AACD,QAAME,YAAY,GAAGP,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAACK,IAAAA,aAAD;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA;AAAlD,MAA8DL,YAApE,CANmB,CAOlB;;AACA,QAAM,CAACM,IAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC;AAC9Bc,IAAAA,IAAI,EAAE;AADwB,GAAD,CAAjC,CARkB,CAYlB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAWF,IAAjB,CAbkB,CAcjB;;AACF,MAAG,CAACP,OAAJ,EAAa,OAAO,IAAP,CAfM,CAiBnB;;AACA,QAAO,CAACU,UAAD,IAAeV,OAAtB,CAlBmB,CAmBlB;;AACA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACtBJ,IAAAA,QAAQ,CAAC,EACL,GAAGD,IADE;AAEL,OAACK,CAAC,CAACC,MAAF,CAASJ,IAAV,GAAiBG,CAAC,CAACC,MAAF,CAASC;AAFrB,KAAD,CAAR;AAIH,GALD;;AAMD,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACI,cAAF,GADkB,CAGlB;;AACA,QAAGP,IAAI,CAACQ,IAAL,OAAgB,EAAnB,EAAsB;AAClBZ,MAAAA,YAAY;AACZ;AACH,KAPiB,CASlB;;;AACAE,IAAAA,IAAI,CAACW,SAAL,GAAiBR,UAAU,CAACS,EAA5B;AACAZ,IAAAA,IAAI,CAACa,KAAL,GAAY,KAAZ;AACAhB,IAAAA,OAAO,CAACG,IAAD,CAAP,CAZkB,CAclB;;AACAD,IAAAA,QAAQ,CAACI,UAAU,CAACS,EAAZ,CAAR,CAfkB,CAgBlB;;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GApBD;;AAqBA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEM,QAAhB;AAAA,8BACI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAoB,UAAA,KAAK,EAAEN,IAA3B;AAAiC,UAAA,QAAQ,EAAEE,YAA3C;AAAyD,UAAA,WAAW,EAAC,WAArE;AAAiF,UAAA,IAAI,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKR,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiD,IAT/D;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5DD;;GAAML,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport projectContext from '../../context/projects/projectContext'\r\nimport taskContext from '../../context/tasks/TaskContext'\r\n\r\n\r\nconst FormTask = () => {\r\n     //Si proyecto esta activo\r\n     const projectsContext = useContext(projectContext)\r\n     const {project } = projectsContext\r\n     //obtener task context \r\n    const tasksContext = useContext(taskContext)\r\n    const {taskselection, errortask, addTask, validateTask, getTasks} = tasksContext\r\n     //state form \r\n     const [task, saveTask] = useState({\r\n         name: '',\r\n     })\r\n\r\n     //extraer el nombre del proyecto\r\n     const { name } = task\r\n      //Sin proyectos \r\n    if(!project) return null\r\n\r\n    //Array destructuring \r\n    const  [projectNow] = project\r\n     //Leer valores del form\r\n     const handleChange = e => {\r\n         saveTask({\r\n             ...task,\r\n             [e.target.name]: e.target.value\r\n         })\r\n     }\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        //validar\r\n        if(name.trim() === ''){\r\n            validateTask()\r\n            return\r\n        }   \r\n        \r\n        //agregar la tarea al state\r\n        task.projectId = projectNow.id\r\n        task.state= false\r\n        addTask(task)\r\n\r\n        //Obtener y filtrar tareas\r\n        getTasks(projectNow.id)\r\n        //reiniciar form\r\n        saveTask({\r\n            name: ''\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <input type=\"text\"  value={name} onChange={handleChange} placeholder=\"Name task\" name=\"name\"/>\r\n                </div>\r\n                <div>\r\n                    <button>Add Task</button>\r\n                </div>\r\n            </form>\r\n            {errortask ? <p>El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTask\r\n"]},"metadata":{},"sourceType":"module"}