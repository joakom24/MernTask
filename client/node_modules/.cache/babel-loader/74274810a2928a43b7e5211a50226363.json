{"ast":null,"code":"import { ADD_PROJECT, PROJECT_NOW, FORM_PROJECT, GET_PROJECT, VALIDATE_FORM } from '../../types';\n\nconst red = (state, action) => {\n  switch (action.type) {\n    case FORM_PROJECT:\n      return { ...state,\n        form: true\n      };\n\n    case GET_PROJECT:\n      return { ...state,\n        projects: action.payload\n      };\n\n    case ADD_PROJECT:\n      return { ...state,\n        projects: [...state.projects, action.payload],\n        form: false,\n        errorForm: false\n      };\n\n    case VALIDATE_FORM:\n      return { ...state,\n        errorForm: true\n      };\n\n    case PROJECT_NOW:\n      return { ...state,\n        project: state.projects.filter(project => project.id === action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default red;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/taskReact/client/src/context/projects/projectReducer.js"],"names":["ADD_PROJECT","PROJECT_NOW","FORM_PROJECT","GET_PROJECT","VALIDATE_FORM","red","state","action","type","form","projects","payload","errorForm","project","filter","id"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,WAAjD,EAA8DC,aAA9D,QAAmF,aAAnF;;AAEA,MAAMC,GAAG,GAAI,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,IAAI,EAAE;AAFH,OAAP;;AAIA,SAAKN,WAAL;AACA,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAFd,OAAP;;AAIA,SAAKX,WAAL;AACA,aAAO,EACH,GAAGM,KADA;AAEHI,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoBH,MAAM,CAACI,OAA3B,CAFP;AAGHF,QAAAA,IAAI,EAAE,KAHH;AAIHG,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMA,SAAKR,aAAL;AACA,aAAO,EACH,GAAGE,KADA;AAEHM,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIA,SAAKX,WAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHO,QAAAA,OAAO,EAAEP,KAAK,CAACI,QAAN,CAAeI,MAAf,CAAsBD,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeR,MAAM,CAACI,OAAvD;AAFN,OAAP;;AAIR;AACA,aAAOL,KAAP;AA7BJ;AA+BH,CAhCD;;AAiCA,eAAeD,GAAf","sourcesContent":["import { ADD_PROJECT, PROJECT_NOW, FORM_PROJECT, GET_PROJECT, VALIDATE_FORM } from '../../types'\r\n\r\nconst red  = (state, action) => {\r\n    switch(action.type) {\r\n        case FORM_PROJECT:\r\n            return {\r\n                ...state,\r\n                form: true\r\n            }\r\n            case GET_PROJECT: \r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n            case ADD_PROJECT: \r\n            return {\r\n                ...state,\r\n                projects: [...state.projects, action.payload],\r\n                form: false,\r\n                errorForm: false\r\n            }\r\n            case VALIDATE_FORM:\r\n            return {\r\n                ...state,\r\n                errorForm: true\r\n            }\r\n            case PROJECT_NOW:\r\n                return {\r\n                    ...state,\r\n                    project: state.projects.filter(project => project.id === action.payload)\r\n                }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\nexport default red"]},"metadata":{},"sourceType":"module"}