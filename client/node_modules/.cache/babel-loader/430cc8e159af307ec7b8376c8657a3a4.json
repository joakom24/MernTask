{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\taskReact\\\\client\\\\src\\\\context\\\\tasks\\\\TaskState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATE_TASK } from '../../types';\nimport TaskContext from './TaskContext';\nimport TaskReducer from './TaskReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    tasks: [{\n      id: 1,\n      name: 'elegir pa',\n      estado: true,\n      projectId: 1\n    }, {\n      id: 2,\n      name: 'elegir colores',\n      estado: false,\n      projectId: 2\n    }, {\n      id: 3,\n      name: 'elegir pago',\n      estado: false,\n      projectId: 3\n    }, {\n      id: 4,\n      name: 'elegir host',\n      estado: true,\n      projectId: 4\n    }],\n    tasksproject: null,\n    errortask: false\n  }; //Crear disptach y state\n\n  const [state, dispatch] = useReducer(TaskReducer, initialState); //Funciones\n  //Obtener tareas\n\n  const getTasks = projectId => {\n    dispatch({\n      type: TASK_PROJECT,\n      payload: projectId\n    });\n  }; //Agregar tarea al proyecto\n\n\n  const addTask = task => {\n    dispatch({\n      type: ADD_TASK,\n      payload: task\n    });\n  }; //Valida y muestra error\n\n\n  const validateTask = () => {\n    dispatch({\n      type: VALIDATE_TASK\n    });\n  }; //Eliminar tarea por id\n\n\n  const deleteTask = id => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: id\n    });\n  }; //Cambia el estado de cada tarea\n\n\n  const changeStateTask = task => {\n    dispatch({\n      type: STATE_TASK,\n      payload: task\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      tasksproject: state.tasksproject,\n      errortask: state.errortask,\n      validateTask,\n      getTasks,\n      addTask,\n      deleteTask,\n      changeStateTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/taskReact/client/src/context/tasks/TaskState.js"],"names":["useReducer","TASK_PROJECT","ADD_TASK","VALIDATE_TASK","DELETE_TASK","STATE_TASK","TaskContext","TaskReducer","TaskState","props","initialState","tasks","id","name","estado","projectId","tasksproject","errortask","state","dispatch","getTasks","type","payload","addTask","task","validateTask","deleteTask","changeStateTask","children"],"mappings":";;;AAAA,SAAUA,UAAV,QAA4B,OAA5B;AACA,SAAQC,YAAR,EAAsBC,QAAtB,EAAgCC,aAAhC,EAA+CC,WAA/C,EAA4DC,UAA5D,QAA6E,aAA7E;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EACL,CACA;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,WAAd;AAA2BC,MAAAA,MAAM,EAAC,IAAlC;AAAwCC,MAAAA,SAAS,EAAE;AAAnD,KADA,EAEA;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,gBAAd;AAAgCC,MAAAA,MAAM,EAAC,KAAvC;AAA8CC,MAAAA,SAAS,EAAE;AAAzD,KAFA,EAGA;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,aAAd;AAA6BC,MAAAA,MAAM,EAAC,KAApC;AAA2CC,MAAAA,SAAS,EAAE;AAAtD,KAHA,EAIA;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,aAAd;AAA6BC,MAAAA,MAAM,EAAC,IAApC;AAA2CC,MAAAA,SAAS,EAAC;AAArD,KAJA,CAFiB;AAQrBC,IAAAA,YAAY,EAAG,IARM;AASrBC,IAAAA,SAAS,EAAE;AATU,GAArB,CADuB,CAcvB;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACO,WAAD,EAAcG,YAAd,CAApC,CAhBuB,CAkBvB;AAEA;;AACA,QAAMU,QAAQ,GAAGL,SAAS,IAAI;AAC1BI,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEpB,YADD;AAELqB,MAAAA,OAAO,EAAEP;AAFJ,KAAD,CAAR;AAIH,GALD,CArBuB,CA2BvB;;;AACA,QAAMQ,OAAO,GAAGC,IAAI,IAAI;AACpBL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEnB,QADD;AAELoB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD,CA5BuB,CAmCvB;;;AACA,QAAMC,YAAY,GAAG,MAAK;AACtBN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAElB;AADD,KAAD,CAAR;AAGH,GAJD,CApCuB,CA0CvB;;;AACA,QAAMuB,UAAU,GAAGd,EAAE,IAAI;AACrBO,IAAAA,QAAQ,CAAE;AACNE,MAAAA,IAAI,EAAEjB,WADA;AAENkB,MAAAA,OAAO,EAAGV;AAFJ,KAAF,CAAR;AAIH,GALD,CA3CuB,CAkDvB;;;AACA,QAAMe,eAAe,GAAGH,IAAI,IAAI;AAC5BL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBb,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADY;AAEzBK,MAAAA,YAAY,EAAEE,KAAK,CAACF,YAFK;AAGzBC,MAAAA,SAAS,EAAEC,KAAK,CAACD,SAHQ;AAIzBQ,MAAAA,YAJyB;AAKzBL,MAAAA,QALyB;AAMzBG,MAAAA,OANyB;AAOzBG,MAAAA,UAPyB;AAQzBC,MAAAA;AARyB,KAA7B;AAAA,cAUKlB,KAAK,CAACmB;AAVX;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvED;;GAAMpB,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import {  useReducer } from \"react\";\r\nimport {TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, STATE_TASK} from '../../types'\r\nimport TaskContext from './TaskContext'\r\nimport TaskReducer from './TaskReducer'\r\n\r\n\r\nconst TaskState = props => {\r\n    const initialState = {\r\n        tasks: \r\n        [\r\n        {id: 1, name: 'elegir pa', estado:true, projectId: 1},\r\n        {id: 2, name: 'elegir colores', estado:false, projectId: 2},\r\n        {id: 3, name: 'elegir pago', estado:false, projectId: 3},\r\n        {id: 4, name: 'elegir host', estado:true , projectId:4 }\r\n    ],\r\n    tasksproject : null,\r\n    errortask: false\r\n    }\r\n    \r\n\r\n    //Crear disptach y state\r\n\r\n    const [state, dispatch] = useReducer(TaskReducer, initialState)\r\n    \r\n    //Funciones\r\n\r\n    //Obtener tareas\r\n    const getTasks = projectId => {\r\n        dispatch({\r\n            type: TASK_PROJECT,\r\n            payload: projectId\r\n        })\r\n    }\r\n    //Agregar tarea al proyecto\r\n    const addTask = task => {\r\n        dispatch({\r\n            type: ADD_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n\r\n    //Valida y muestra error\r\n    const validateTask = () =>{\r\n        dispatch({\r\n            type: VALIDATE_TASK,\r\n        })\r\n    }\r\n\r\n    //Eliminar tarea por id\r\n    const deleteTask = id => {\r\n        dispatch ({\r\n            type: DELETE_TASK,\r\n            payload:  id\r\n        })\r\n    }\r\n\r\n    //Cambia el estado de cada tarea\r\n    const changeStateTask = task => {\r\n        dispatch({\r\n            type: STATE_TASK,\r\n            payload: task\r\n        })\r\n    }\r\n    return (\r\n        <TaskContext.Provider value={{\r\n            tasks: state.tasks,\r\n            tasksproject: state.tasksproject,\r\n            errortask: state.errortask,\r\n            validateTask,\r\n            getTasks,\r\n            addTask,\r\n            deleteTask,\r\n            changeStateTask\r\n        }}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskState"]},"metadata":{},"sourceType":"module"}