{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\taskReact\\\\client\\\\src\\\\components\\\\tasks\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport taskContext from '../../context/tasks/TaskContext';\nimport projectContext from '../../context/projects/projectContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task\n}) => {\n  _s();\n\n  //Si proyecto esta activo\n  const projectsContext = useContext(projectContext);\n  const {\n    project\n  } = projectsContext; //obtener task context \n\n  const tasksContext = useContext(taskContext);\n  const {\n    deleteTask,\n    getTasks,\n    changeStateTask\n  } = tasksContext; //EXTRAER PROYECTO\n\n  const [projectNow] = project; //Se ejecuta al apretar btn de borrar\n\n  const taskDelete = id => {\n    deleteTask(task.id);\n    getTasks(projectNow.id);\n  }; //funcion que modifica state de tasks\n\n\n  const changeState = task => {\n    if (task.state) {\n      task.state = false;\n    } else {\n      task.state = true;\n    }\n\n    changeStateTask;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state\",\n      children: task.state ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {},\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Incompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => taskDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"2+mDrxjF9tmQuxdAcSOPJI0AsYg=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/taskReact/client/src/components/tasks/Task.js"],"names":["React","useContext","taskContext","projectContext","Task","task","projectsContext","project","tasksContext","deleteTask","getTasks","changeStateTask","projectNow","taskDelete","id","changeState","state","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAyB,iCAAzB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB;AACA,QAAMC,eAAe,GAAGL,UAAU,CAACE,cAAD,CAAlC;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaD,eAAnB,CAHqB,CAKrB;;AACA,QAAME,YAAY,GAAGP,UAAU,CAACC,WAAD,CAA/B;AACA,QAAM;AAAEO,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAA2CH,YAAjD,CAPqB,CAUrB;;AACA,QAAM,CAACI,UAAD,IAAeL,OAArB,CAXqB,CAYrB;;AACA,QAAMM,UAAU,GAAGC,EAAE,IAAI;AACrBL,IAAAA,UAAU,CAACJ,IAAI,CAACS,EAAN,CAAV;AACAJ,IAAAA,QAAQ,CAACE,UAAU,CAACE,EAAZ,CAAR;AACH,GAHD,CAbqB,CAkBrB;;;AACA,QAAMC,WAAW,GAAGV,IAAI,IAAI;AACxB,QAAGA,IAAI,CAACW,KAAR,EAAe;AACXX,MAAAA,IAAI,CAACW,KAAL,GAAa,KAAb;AACH,KAFD,MAEO;AACHX,MAAAA,IAAI,CAACW,KAAL,GAAa,IAAb;AACH;;AACDL,IAAAA,eAAe;AAClB,GAPD;;AAQA,sBACI;AAAA,4BACI;AAAA,6BAAI;AAAA,kBAAIN,IAAI,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAEIZ,IAAI,CAACW,KAAL,gBAGI;AAAQ,QAAA,OAAO,EAAE,MAAM,CAEtB,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,gBASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,YAHJ,eAmBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,MAAMH,UAAU,CAACR,IAAI,CAACS,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAzDD;;GAAMV,I;;KAAAA,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport taskContext  from '../../context/tasks/TaskContext'\r\nimport projectContext from '../../context/projects/projectContext'\r\n\r\n\r\nconst Task = ({task}) => {\r\n    //Si proyecto esta activo\r\n    const projectsContext = useContext(projectContext)\r\n    const {project } = projectsContext\r\n    \r\n    //obtener task context \r\n    const tasksContext = useContext(taskContext)\r\n    const { deleteTask, getTasks, changeStateTask} = tasksContext\r\n\r\n\r\n    //EXTRAER PROYECTO\r\n    const [projectNow] = project\r\n    //Se ejecuta al apretar btn de borrar\r\n    const taskDelete = id => {\r\n        deleteTask(task.id)\r\n        getTasks(projectNow.id)\r\n    }\r\n\r\n    //funcion que modifica state de tasks\r\n    const changeState = task => {\r\n        if(task.state) {\r\n            task.state = false\r\n        } else {\r\n            task.state = true\r\n        }\r\n        changeStateTask\r\n    }\r\n    return (\r\n        <div>\r\n            <li><p>{task.name}</p></li>\r\n\r\n            <div className=\"state\">\r\n                {\r\n                task.state \r\n                ?\r\n                (\r\n                    <button onClick={() => {\r\n\r\n                    }}>Completed</button>\r\n                )\r\n                :\r\n                (\r\n                    <button>Incompleted</button>\r\n                )\r\n            \r\n            }\r\n            </div>\r\n            <div className=\"actions\">\r\n                <button>\r\n                    Edit\r\n                </button>\r\n                <button onClick={() => taskDelete(task.id)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n"]},"metadata":{},"sourceType":"module"}